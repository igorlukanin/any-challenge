<% extend 'layouts/default.ect' %>

<div class="player">
    <div class="player__email"><%= @player.email %></div>
    <div id="cards" class="player__cards"></div>
</div>

<script>
    var cards = [];

    var socket = io('http://localhost:3016/cards', { query: 'player=<%= @player.id %>' });

    socket.on('cards', function(updatedCards) {
        cards = updatedCards;

        drawCards();
    });

    var updateCard = function(card) {
        for (var i in cards) {
            if (cards[i].id == card.id) {
                cards[i] = card;
            }
        }

        drawCards();
    };

    var playCard = function(data) {
        d3.xhr('/cards/' + data.id + '/play')
                .response(function(request) { return JSON.parse(request.responseText); })
                .post()
                .on('load', updateCard);
    };

    var skipCard = function(data) {
        d3.xhr('/cards/' + data.id + '/skip')
                .response(function(request) { return JSON.parse(request.responseText); })
                .post()
                .on('load', updateCard);
    };

    var drawCard = function(data) {
        var card = d3.select(this);

        card.append('div')
                .classed('player__card__name', true)
                .text(data.name);

        card.append('div')
                .classed('player__card__rules', true)
                .text(data.rules);

        if (!data.solo) {
            card.append('div')
                    .classed('player__card__competitor', true)
                    .text('vs. ' + (data.own ? data.competitor.email : data.player.email));
        }

        var buttons = card.append('div')
                .classed('player__card__buttons', true);

        if (data.solo) {
            var soloButton = buttons.append('a')
                    .classed('player__card__buttons__button', true)
                    .classed('player__card__buttons__button_solo', true)
                    .text('Играть')
                    .on('click', playCard);

            soloButton.append('span')
                    .classed('player__card__buttons__button__score', true)
                    .text(data.score);
        }

        if (data.skip) {
            buttons.append('a')
                    .classed('player__card__buttons__button', true)
                    .classed('player__card__buttons__button_skip', true)
                    .text('Сдаться')
                    .on('click', skipCard);
        }
    };

    var redrawCard = function(data) {
        var card = d3.select(this)
                .classed('player__card_regular', data.type == 'regular')
                .classed('player__card_played', data.played)
                .classed('player__card_skipped', data.skipped);
    };

    var drawCards = function() {
        d3.select('#cards')
                .selectAll('.player__card')
                .data(cards, function(data) { return data.id; })
                .each(redrawCard)
            .enter()
                .append('div')
                .classed('player__card', true)
                .each(drawCard)
                .each(redrawCard);
    };

    drawCards();
</script>